interface Figura {
    fun calcularSuperficie(): Int
    fun calcularPerimetro(): Int
    fun tituloResultado() {
        println("Datos de la figura")
    }
}
class Cuadrado(val lado: Int): Figura {
    override fun calcularSuperficie(): Int {
        return lado * lado
    }
    override fun calcularPerimetro(): Int {
        return lado * 4
    }
}
class Rectangulo(val ladoMayor: Int, val ladoMenor: Int): Figura {
    override fun calcularSuperficie(): Int {
        return ladoMayor * ladoMenor
    }
    override fun calcularPerimetro(): Int {
        return (ladoMayor * 2) + (ladoMenor * 2)
    }
}
fun main(args: Array<String>) {
    val cuadrado1 = Cuadrado(10)
    cuadrado1.tituloResultado()
    println("Per√≠metro del cuadrado: ${cuadrado1.calcularPerimetro()}")
    println("Superficie del cuadrado: ${cuadrado1.calcularSuperficie()}")
    val rectangulo1 = Rectangulo(10, 5)
    rectangulo1.tituloResultado()
    println("Per√≠metro del rect√°ngulo: ${rectangulo1.calcularPerimetro()}")
    println("Superficie del rect√°ngulo: ${rectangulo1.calcularSuperficie()}")
}

//Interface Figura que es implementada por las clases Cuadrado y Rectangulo.
//üîπ Cada clase debe definir c√≥mo calcula superficie y per√≠metro.
//üîπ El metodo tituloResultado() imprime un encabezado com√∫n.
//üîπ En main(), se crean objetos de ambas figuras, se invocan sus m√©todos y se imprime su informaci√≥n.
//üîπ Refuerza el uso de interfaces para manejar estructuras geom√©tricas con diferentes comportamientos.